@{
    Layout = "_AdminLayout";
}

<body>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-2">
                            <label>Detail</label><br />
                            <input type="text" class="form-control txtFilterDetail" />
                        </div>
                        <div class="col-md-2">
                            <label>Title</label><br />
                            <input type="text" class="form-control txtFilterTitle" />
                        </div>


                        <div class="col-md-2">
                            <label>Order Key</label><br />
                            <input type="number" class="form-control txtFilterOrderKey" />
                        </div>


                        <div class="col-md-2">
                            <br />
                            <button type="button" class="btn btn-primary btnSearch mt-2" style="float:right;">
                                <i class="fa fa-search"></i> SEARCH
                            </button>
                        </div>
                        <div class="col-md-2">
                            <br />
                            <button type="button" class="btn btn-success btnNew mt-2" style="float:right; ">
                                <i class="fa fa-plus"></i> NEW
                            </button>
                        </div>
                    </div>
                    <div class="card-body">

                        <table class="table table-hover dtTable">
                            <tr>
                                <th scope="col">S.N.</th>

                                <th scope="col">Details</th>
                                <th scope="col">Title</th>

                                <th scope="col">Background_Image</th>
                                <th scope="col">Valid From</th>
                                <th scope="col">Valid To</th>
                                <th scope="col">Order Key</th>
                                <th scope="col">Action</th>
                            </tr>

                            <tbody class="data-body">
                            </tbody>
                        </table>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">NoticeInfo Setup Page</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="form">
                                    <label>Detail</label>
                                    <input type="text" class="form-control txtDetail" id="editor" />
                                    <input type="hidden" class="hdnnoticeID" value="0" />
                                </div>
                                <div class="form">
                                    <label>Title</label>
                                    <input type="text" class="form-control txtTitle" />
                                </div>

                                <div class="form">
                                    <label>Backgraound Image</label>
                                    <input type="file" class="form-control fileupload" />
                                </div>
                                <div class="form">
                                    <label>Valid From</label>
                                    <input type="date" class="form-control txtValidFrom" />
                                </div>
                                <div class="form">
                                    <label>Valid To</label>
                                    <input type="date" class="form-control txtValidTo" />
                                </div>
                                <div class="form">
                                    <label>Order Key</label>
                                    <input type="number" class="form-control txtOrderKey" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btnClose" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary btnSubmit">Submit</button>
                    <button type="button" class="btn btn-danger btnCancel">Cancel</button>
                </div>
            </div>
        </div>
    </div>

</body>
@section LocalScripts{
    <script>
        function uploadFile(callback) {
    var fileInput = $('.fileupload')[0].files[0];
    if (!fileInput) {
        showToast("Stop", "Please upload an image", "error");
        return;
    }

    var formData = new FormData();
    formData.append("file", fileInput);

    $.ajax({
        url: '@Url.Action("UploadFile", "FileUpload")', // Endpoint for file upload
        method: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function (res) {
            if (res.success) {
                callback(res.data); // Pass the file name/path to the callback
            } else {
                showToast("Stop", res.message, "error");
            }
        },
        error: function (e) {
            console.log(e);
            showToast("Stop", "File upload failed", "error");
        }
    });
}
        $(document).ready(function () {
            loadData();
        });
        $(document).on('click', '.btnClose', function () {
            $('#exampleModal').modal('hide');
        });

        $(document).on('click', '.btnNew', function () {
            $('#exampleModal').modal('show');
        });
        function loadData() {
            var detail = $('.txtFilterDetail').val() || '';
            var title = $('.txtFilterTitle').val() || '';

             var orderKey = $('.txtFilterOrderKey').val() || '';


             $.ajax({
                 contentType: "application/json; charset=utf-8",
                 method: 'GET',
                 url: '@Url.Action("GetAllData", "NoticeInfo")'
                     + '?NoticeDetail=' + detail
                     + '&Title=' + title

                     + '&Orderkey=' + orderKey,
                      // Correctly construct the query string
                 success: function (res) {
                     debugger
                     var dt = '';
                     // Loop through the data returned from the server
                     $.each(res.data, function (i, x) {
                         dt += '<tr>';
                         dt += '<td>' + (i + 1) + '</td>'; // Serial number
                         dt += '<td>' + x.detail + '</td>'; // Dashboard Slider Info
                         dt += '<td>' + x.noticeTitle + '</td>'; // Title
                        
                         dt += '<td><img src="/satishna/' + x.backgroundImage + '" alt="Background Image" style="width: 100px; height: 50px; object-fit: cover;"/></td>';


                         dt += '<td>' + x.validFrom + '</td>'; // Valid From
                         dt += '<td>' + x.validTo + '</td>';   // Valid To
                         dt += '<td>' + x.orderKey + '</td>'; // Order Key
                         dt += '<td>';
                         dt += '<button type="button" class="btn btn-secondary btn-sm btnEdit" data-key="' + x.id + '"><i class="fa fa-edit"></i> EDIT</button>';
                         dt += '<button type="button" class="btn btn-danger btn-sm  btnDelete ms-2 " data-key="' + x.id + '"><i class="fa fa-trash"></i> DELETE</button>';
                         dt += '</td>';
                         dt += '</tr>';
                     });

                     // Update the HTML of the table body with the new rows
                     $('.data-body').html(dt);
                 },
                 error: function (e) {
                     console.log(e);
                 },
                 beforeSend: function () {
                     // Optionally block the UI while the data is being retrieved
                     $.blockUI();
                 },
                 complete: function () {
                     // Optionally unblock the UI after the data is loaded
                     $.unblockUI();
                 }

             });
        }
        let ckEditorInstance;

        ClassicEditor
            .create(document.querySelector('#editor'))
            .then(editor => {
                ckEditorInstance = editor;  // Store the editor instance for later use
            })
            .catch(error => {
                console.error(error);
            });
        $(document).on('click', '.btnSubmit', function () {

             var detail = ckEditorInstance.getData();
            var title = $('.txtTitle').val();

            var backgroundimage = '';
            var validfrom = $('.txtValidFrom').val();
            var validTo = $('.txtValidTo').val();
            var orderkey = $('.txtOrderKey').val();
            var id = $('.hdnnoticeID').val();
            console.log("Detail: ", detail);
           if (detail == '') {
               toastr["error"]("I cannot proceed forward", "Please notice detail :)");

           } else if (title == '') {
               toastr["error"]("Do I have to remind you to enter title also", "Please kindly fill all the form (:");
           }

           else if (validfrom == '') {
               toastr["error"]("Do I have to remind you to enter validfrom also", "Please kindly fill all the form (:");
           }
           else if (validTo == '') {
               toastr["error"]("Do I have to remind you to enter validto also", "Please kindly fill all the form (:");
           }
           else if (orderkey == '') {
               toastr["error"]("Enough!!!", "Please  fill  this orderkey too");
           }
           else {
                 uploadFile(function (fileName) {
                   // Set the file name/path in the form data
                   backgroundimage = fileName;

                   $.ajax({
                       contentType: "application/json; charset=utf-8",
                       method: 'POST',
                       url: '@Url.Action("SaveData", "NoticeInfo")',

                       data: JSON.stringify({
                           Detail: detail,
                           NoticeTitle: title,

                           BackgroundImage: backgroundimage,
                           ValidFrom: validfrom,
                           ValidTo: validTo,
                           OrderKey: orderkey,
                           Id: id
                       }),
                       success: function (res) {
                           debugger;
                           if (res.success) {

                               toastr["success"]("Resource updated successfully.", "Success");

                               clearForm();
                               $('#exampleModal').modal('hide');
                           }
                           else {
                               toastr["error"]("Resource not updated ", "error");
                           }
                       },
                       error: function (e) {
                           console.log(e);
                       },
                       beforeSend: function () {
                           // block ui
                           $.blockUI();
                       },
                       complete: function () {
                           // unblock ui
                           $.unblockUI();
                       }
                   });
                 });
                }
           
       });
        function clearForm() {
            var detail = $('.txtDetail').val('');
            var title = $('.txtTitle').val('');

            var backgroundimage = $('.txtBackgroundImage').val('');
            var validfrom = $('.txtValidFrom').val('');
            var validTo = $('.txtValidTo').val('');
            var orderkey = $('.txtOrderKey').val('');
            var id = $('.hdnDashID').val('0');
        }
        $(document).on('click', '.btnDelete', function () {
            var btn = $(this);
            $.confirm({
                title: 'Confirm!',
                type: 'red',
                content: 'Are you sure to delete?',
                buttons: {
                    confirm: () => {
                        var id = $(btn).data('key')
                        deleteData(id);
                    },
                    cancel: function () {

                    },
                }
            });
        });
        function deleteData(id) {
            $.ajax({
            contentType: "application/json; charset=utf-8",
            method: 'get',
             // <-- Added missing comma here
            url: '@Url.Action("Delete", "NoticeInfo")?id=' + id,
            success: function (res) {
                if (res.success) {
                    alert("delete");
                    loadData();
                }
            },
            error: function (e) {
                console.log(e);
            },
            beforeSend: function () {
                $.blockUI();
            },
            complete: function () {
                $.unblockUI();
            }
        });

    }

    $(document).on('click', '.btnSearch', function () {
            loadData();
        });
        $(document).on('click', '.btnEdit', function () {
            var btn = $(this);
            var id = $(this).data('key');
         $.ajax({
                contentType: "application/json; charset=utf-8",
                method: 'get',
                url: '@Url.Action("GetDataByID", "NoticeInfo")?id='+id,
             success: function (res) {
                 debugger;
                    if (res.success) {
                         $('#exampleModal').modal('show');
                        ckEditorInstance.setData(res.data.detail);
                        $('.txtTitle').val(res.data.noticeTitle);
                        $('.txtSubTitle').val(res.data.subTitle);
                        $('.txtBackgroundImage').val(res.data.backgroundImage);
                        $('.txtValidFrom').val(res.data.validFrom);
                        $('.txtValidTo').val(res.data.validTo);
                        $('.txtOrderKey').val(res.data.orderKey);
                        debugger
                        $('.hdnnoticeID').val(res.data.id);
                        debugger
                    } else {
                        toastr("!!!", res.message, "error");
                    }
                },
                error: function (e) {
                    console.log(e);
                },
                beforeSend: function () {
                    $.blockUI();
                },
                complete: function () {
                    $.unblockUI();
                }
            });
        });
        $(document).on('click', '.btnCancel', function () {
            $.confirm({
                title: 'Confirm!',
                type: 'red',
                content: 'Are you sure to clear form?',
                buttons: {
                    confirm: function () {
                        clearForm();
                        $('#exampleModal').modal('hide');
                    },
                    cancel: function () {

                    },
                }
            });
        })
    </script>
}

